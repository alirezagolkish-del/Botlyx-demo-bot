import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ðŸš€ **Welcome to @Botlyx Demo!**\n\n"
        "ðŸ’Ž **@Botlyx** is live on Fragment Auction:\n"
        "ðŸ’° **Current Price: 1500 TON**\n"
        "ðŸ”— **Bid Now:** fragment.com/username/Botlyx\n\n"
        "ðŸŽ® **Bot Features:**\n"
        "â€¢ Automated TON Trading\n"
        "â€¢ NFT Gaming Integration\n"
        "â€¢ Smart Telegram Automation\n\n"
        "**Bid and own @Botlyx!** ðŸ‘‘\n\n"
        "/price - Check current bid\n"
        "/demo - Simulate TON trade"
    )

async def price(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ðŸ’° **@Botlyx Current Price: 1500 TON (~$3210)**\n"
        "ðŸ”¥ **Live Auction:** fragment.com/username/Botlyx\n"
        "**First bid wins!**"
    )

async def demo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ðŸŽ® **TON Trade Demo:**\n"
        "You traded 100 TON â†’ +15% profit! ðŸ“ˆ\n"
        "**Build real bots with @Botlyx!**\n"
        "fragment.com/username/Botlyx"
    )

def main():
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("price", price))
    app.add_handler(CommandHandler("demo", demo))
    app.run_polling()

if __name__ == '__main__':
    main()
